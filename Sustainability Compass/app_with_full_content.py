#!/usr/bin/env python3
"""
Enhanced Sustainability Compass Launcher
Choose between Limited Content (old) vs Full Content (new) analysis
"""

import os
import sys
from pathlib import Path

def show_comparison():
    """Show the key differences between approaches"""
    print("üéØ Sustainability Compass Pro - Analysis Comparison")
    print("=" * 60)
    print()
    print("üìä CONTENT ANALYSIS COMPARISON:")
    print()
    print("‚ùå OLD APPROACH (Limited Content):")
    print("  üìâ Analyzes only: 6,000 characters (~3% of document)")
    print("  üìÑ Coverage: First few pages only")
    print("  üîß Method: JSON parsing (error-prone)")
    print("  üéØ Analysis: Superficial, missing key details")
    print("  ‚ö° Speed: Fast but incomplete")
    print()
    print("‚úÖ NEW APPROACH (Full Content):")
    print("  üìà Analyzes: Complete document (100%)")
    print("  üìÑ Coverage: All pages, tables, detailed content")
    print("  üîß Method: Markdown format (reliable)")
    print("  üéØ Analysis: Comprehensive, evidence-based")
    print("  üíé Quality: Premium analysis with Gemini 2.5 Pro")
    print()
    print("üí° RECOMMENDATION: Use Full Content for accurate results!")
    print()

def main():
    """Main launcher with user choice"""
    
    show_comparison()
    
    while True:
        print("üöÄ Launch Options:")
        print("1. üî• NEW: Full Content Analysis (Recommended)")
        print("2. ‚ö†Ô∏è  OLD: Limited Content Analysis")
        print("3. üß™ TEST: Compare Both Approaches")
        print("4. üìã VIEW: Show Detailed Comparison")
        print("5. ‚ùå EXIT")
        print()
        
        choice = input("üëâ Select option (1-5): ").strip()
        
        if choice == "1":
            print("\nüöÄ Launching Full Content Analysis App...")
            print("‚úÖ Using: MarkdownGeminiAnalyzer")
            print("üìà Content: Complete document analysis")
            print("üéØ Quality: Premium comprehensive analysis")
            print()
            # Launch main app (already updated to use full content)
            os.system("python app.py")
            break
            
        elif choice == "2":
            print("\n‚ö†Ô∏è  Launching Limited Content Analysis...")
            print("‚ùå Using: Original GeminiAnalyzer (6K chars only)")
            print("üìâ Content: Partial document analysis")
            print("üîç Note: May miss important information")
            print()
            # For demonstration, we could create a version that uses the old analyzer
            print("üí° Consider using Full Content Analysis instead!")
            print("   The old approach only analyzes 3% of your document.")
            print()
            continue
            
        elif choice == "3":
            print("\nüß™ Running Comparison Test...")
            if len(sys.argv) > 1:
                pdf_file = sys.argv[1]
                os.system(f"python test_full_content.py {pdf_file}")
            else:
                pdf_file = input("üìÑ Enter PDF filename (e.g., e.pdf): ").strip()
                if pdf_file and os.path.exists(pdf_file):
                    os.system(f"python test_full_content.py {pdf_file}")
                else:
                    print("‚ùå PDF file not found!")
            continue
            
        elif choice == "4":
            show_comparison()
            continue
            
        elif choice == "5":
            print("üëã Goodbye!")
            break
            
        else:
            print("‚ùå Invalid choice. Please select 1-5.")
            continue

if __name__ == "__main__":
    main() 